# Generated by Django 4.2.7 on 2024-07-14 08:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Capital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
            ],
            options={
                'verbose_name': '资源-资金',
                'verbose_name_plural': '资源-资金',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CapitalRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('resource_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.capital', verbose_name='资源对象')),
            ],
            options={
                'verbose_name': '资金资源',
                'verbose_name_plural': '资金资源',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DataItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
                ('field_type', models.CharField(blank=True, choices=[('CharField', '单行文本'), ('IntegerField', '整数'), ('TypeField', '类型'), ('BooleanField', '是否'), ('User', '系统用户'), ('Reserved', '系统保留'), ('DecimalField', '固定精度小数'), ('TextField', '多行文本'), ('DateTimeField', '日期时间'), ('DateField', '日期'), ('JSONField', 'JSON'), ('FileField', '文件'), ('ComputedField', '计算字段')], default='CharField', max_length=50, null=True, verbose_name='数据类型')),
                ('implement_type', models.CharField(choices=[('Field', '字段'), ('Model', '数据表'), ('KernelModel', '系统表'), ('Program', '程序')], default='Field', max_length=50, verbose_name='实现类型')),
                ('dependency_order', models.PositiveSmallIntegerField(default=0, verbose_name='依赖顺序')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='默认值')),
                ('is_multivalued', models.BooleanField(default=False, verbose_name='多值')),
                ('max_length', models.PositiveSmallIntegerField(blank=True, default=100, null=True, verbose_name='最大长度')),
                ('max_digits', models.PositiveSmallIntegerField(blank=True, default=10, null=True, verbose_name='最大位数')),
                ('decimal_places', models.PositiveSmallIntegerField(blank=True, default=2, null=True, verbose_name='小数位数')),
                ('computed_logic', models.TextField(blank=True, null=True, verbose_name='计算逻辑')),
                ('init_content', models.JSONField(blank=True, null=True, verbose_name='初始内容')),
                ('business_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instances', to='design.dataitem', verbose_name='业务类型')),
            ],
            options={
                'verbose_name': '数据项',
                'verbose_name_plural': '数据项',
                'ordering': ['implement_type', 'dependency_order', 'field_type', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
            ],
            options={
                'verbose_name': '资源-器材',
                'verbose_name_plural': '资源-器材',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DeviceRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('resource_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.device', verbose_name='资源对象')),
            ],
            options={
                'verbose_name': '器材资源',
                'verbose_name_plural': '器材资源',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
            ],
            options={
                'verbose_name': '资源-设备',
                'verbose_name_plural': '资源-设备',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('resource_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.equipment', verbose_name='资源对象')),
            ],
            options={
                'verbose_name': '设备资源',
                'verbose_name_plural': '设备资源',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='描述表达式')),
                ('expression', models.TextField(blank=True, max_length=1024, null=True, verbose_name='表达式')),
                ('is_timer', models.BooleanField(default=False, verbose_name='定时事件')),
                ('parameters', models.JSONField(blank=True, null=True, verbose_name='事件参数')),
            ],
            options={
                'verbose_name': '服务-事件',
                'verbose_name_plural': '服务-事件',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='FormConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='默认值')),
                ('readonly', models.BooleanField(default=False, verbose_name='只读')),
                ('is_required', models.BooleanField(default=False, verbose_name='必填')),
                ('choice_type', models.CharField(blank=True, choices=[('Select', '下拉单选'), ('RadioSelect', '单选按钮列表'), ('CheckboxSelectMultiple', '复选框列表'), ('SelectMultiple', '下拉多选')], max_length=50, null=True, verbose_name='选择类型')),
                ('is_list', models.BooleanField(default=False, verbose_name='列表字段')),
                ('expand_data_item', models.BooleanField(default=False, verbose_name='展开数据项')),
                ('is_aggregate', models.BooleanField(default=False, verbose_name='聚合字段')),
                ('order', models.PositiveSmallIntegerField(default=10, verbose_name='顺序')),
                ('data_item', models.ForeignKey(limit_choices_to=models.Q(('implement_type', 'Field')), on_delete=django.db.models.deletion.CASCADE, to='design.dataitem', verbose_name='数据项')),
            ],
            options={
                'verbose_name': '表单设置',
                'verbose_name_plural': '表单设置',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Knowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
                ('zhi_shi_wen_jian', models.FileField(blank=True, null=True, upload_to='', verbose_name='知识文件')),
                ('zhi_shi_wen_ben', models.TextField(blank=True, null=True, verbose_name='知识文本')),
            ],
            options={
                'verbose_name': '资源-知识',
                'verbose_name_plural': '资源-知识',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('resource_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.knowledge', verbose_name='资源对象')),
            ],
            options={
                'verbose_name': '知识资源',
                'verbose_name_plural': '知识资源',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
            ],
            options={
                'verbose_name': '资源-物料',
                'verbose_name_plural': '资源-物料',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='MaterialRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('resource_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.material', verbose_name='资源对象')),
            ],
            options={
                'verbose_name': '物料资源',
                'verbose_name_plural': '物料资源',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
            ],
            options={
                'verbose_name': '服务-人员',
                'verbose_name_plural': '服务-人员',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='域名')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='项目描述')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
                ('res_type', models.CharField(blank=True, choices=[('Consumption', '消耗'), ('TDM', '分时复用'), ('Recycle', '回收'), ('Shared', '共享')], default='Consumption', max_length=50, null=True, verbose_name='资源类型')),
            ],
            options={
                'verbose_name': '服务-资源',
                'verbose_name_plural': '服务-资源',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
            ],
            options={
                'verbose_name': '服务-角色',
                'verbose_name_plural': '服务-角色',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='价格')),
                ('program', models.JSONField(blank=True, null=True, verbose_name='服务程序')),
                ('service_type', models.CharField(choices=[('USER', '用户'), ('SYSTEM', '系统')], default='OPERATION', max_length=50, verbose_name='服务类型')),
                ('authorize_operators', models.ManyToManyField(blank=True, related_name='operators_authorized', to='design.operator', verbose_name='允许操作员')),
                ('authorize_roles', models.ManyToManyField(blank=True, related_name='roles_authorized', to='design.role', verbose_name='允许角色')),
                ('capital_requirements', models.ManyToManyField(through='design.CapitalRequirements', to='design.capital', verbose_name='资金需求')),
            ],
            options={
                'verbose_name': '服务',
                'verbose_name_plural': '服务',
                'ordering': ['service_type', 'id'],
            },
        ),
        migrations.CreateModel(
            name='SourceCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('code', models.TextField(null=True, verbose_name='源代码')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='design.project', verbose_name='项目')),
            ],
            options={
                'verbose_name': '项目源码',
                'verbose_name_plural': '项目源码',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='中文名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('erpsys_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ERPSysID')),
                ('parameter_values', models.JSONField(blank=True, null=True, verbose_name='参数值')),
                ('order', models.SmallIntegerField(default=0, verbose_name='顺序')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='design.event', verbose_name='事件')),
                ('next_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ruled_as_next_service', to='design.service', verbose_name='后续服务')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='design.service', verbose_name='服务')),
            ],
            options={
                'verbose_name': '服务-规则',
                'verbose_name_plural': '服务-规则',
                'ordering': ['event', 'event', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ServiceConsists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_services', to='design.service', verbose_name='服务')),
                ('sub_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_services', to='design.service', verbose_name='子服务')),
            ],
            options={
                'verbose_name': '服务组成',
                'verbose_name_plural': '服务组成',
                'ordering': ['id'],
                'unique_together': {('service', 'sub_service')},
            },
        ),
        migrations.AddField(
            model_name='service',
            name='consists',
            field=models.ManyToManyField(through='design.ServiceConsists', to='design.service', verbose_name='服务组成'),
        ),
        migrations.AddField(
            model_name='service',
            name='device_requirements',
            field=models.ManyToManyField(through='design.DeviceRequirements', to='design.device', verbose_name='器材需求'),
        ),
        migrations.AddField(
            model_name='service',
            name='equipment_requirements',
            field=models.ManyToManyField(through='design.EquipmentRequirements', to='design.equipment', verbose_name='设备需求'),
        ),
        migrations.AddField(
            model_name='service',
            name='form_config',
            field=models.ManyToManyField(related_name='servicices_form_config', through='design.FormConfig', to='design.dataitem', verbose_name='表单设置'),
        ),
        migrations.AddField(
            model_name='service',
            name='knowledge_requirements',
            field=models.ManyToManyField(through='design.KnowledgeRequirements', to='design.knowledge', verbose_name='知识需求'),
        ),
        migrations.AddField(
            model_name='service',
            name='material_requirements',
            field=models.ManyToManyField(through='design.MaterialRequirements', to='design.material', verbose_name='物料需求'),
        ),
        migrations.AddField(
            model_name='service',
            name='reference',
            field=models.ManyToManyField(blank=True, related_name='referenced_services', to='design.dataitem', verbose_name='引用'),
        ),
        migrations.AddField(
            model_name='service',
            name='route_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services_routed_from', to='design.operator', verbose_name='传递至'),
        ),
        migrations.AddField(
            model_name='service',
            name='subject',
            field=models.ForeignKey(blank=True, limit_choices_to=models.Q(('implement_type', 'Model')), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='served_services', to='design.dataitem', verbose_name='作业记录'),
        ),
        migrations.AddField(
            model_name='operator',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='design.role', verbose_name='角色'),
        ),
        migrations.AddField(
            model_name='operator',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='design_operator', to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='materialrequirements',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.service', verbose_name='服务'),
        ),
        migrations.AddField(
            model_name='knowledgerequirements',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.service', verbose_name='服务'),
        ),
        migrations.AddField(
            model_name='formconfig',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.service', verbose_name='服务'),
        ),
        migrations.AddField(
            model_name='equipmentrequirements',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.service', verbose_name='服务'),
        ),
        migrations.AddField(
            model_name='devicerequirements',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.service', verbose_name='服务'),
        ),
        migrations.CreateModel(
            name='DataItemConsists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=10, verbose_name='顺序')),
                ('data_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subset', to='design.dataitem', verbose_name='数据项')),
                ('sub_data_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='superset', to='design.dataitem', verbose_name='子数据项')),
            ],
            options={
                'verbose_name': '数据项组成',
                'verbose_name_plural': '数据项组成',
                'ordering': ['order', 'id'],
                'unique_together': {('data_item', 'sub_data_item')},
            },
        ),
        migrations.AddField(
            model_name='dataitem',
            name='consists',
            field=models.ManyToManyField(related_name='parent', through='design.DataItemConsists', to='design.dataitem', verbose_name='数据项组成'),
        ),
        migrations.AddField(
            model_name='capitalrequirements',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='design.service', verbose_name='服务'),
        ),
    ]
